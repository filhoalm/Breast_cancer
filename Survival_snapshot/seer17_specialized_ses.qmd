---
toc: true
title: "Malignant Breast Cancer Mortality and Socioeconomic Deprivation in the United States: SEER-17 (Specialized Dataset)"
author: "AMF"
format: html
editor: visual
date: "January 24, 2024"
date-modified: last-modified
---

## Introduction
We want to understand whether the association of deprivation (yost) differs by breast cancer subtype:

## Methods

*Data source*

Data was obtained from the Surveillance, Epidemiology, and End Results (SEER) Program's Seventeen Database (Specialized dataset), accessed through SEER\*Stat version 8.4.0. The dataset comprises malignant breast cancer cases in females aged 35 to 84 years, spanning from 2006 to 2020 with follow-up until December 2020. Age at diagnosis was categorized into 5-year age groups (35 - 39, ..., 80-84) and one-year time spans. Census tract-level socioeconomic status (SES) is available in quintiles. Race and ethnicity definitions follow the criteria established by the SEER program, employing an algorithm to recode detailed race and origin variables into four groups: Non-Hispanic White (NHW), Non-Hispanic Black (NHB), Hispanic (HIS), and Asian and Pacific Islander (API). For more information about the definitions and methodology used to create these specialized variables, refer to [SEER Census Tract-Level Variables](https://seer.cancer.gov/data/specialized/available-databases/census-tract-request/)."

Initially, 3,073,806 cases were included in the study. However, exclusions were made as follows: 17,792 cases were excluded because they were identified through death certificates or autopsy cases, 476,723 were non-malignant cases, 5,492 were cases alive with no survival time, and 508,959 were cases classified as multiple tumors (identified by Sequence Number 0 or 1). After these exclusions, the total number of records utilized for the analysis amounted to 2,082,632.


*Statistical analysis* :

The study assessed the proportions of ER status, breast cancer subtype, cancer staging, SES status, and persistent poverty and race and ethnicity within each breast cancer subtype. Mortality rates were calculated per 1,000 person-years.  To quantify the hazard ratios between the variables, a Cox proportional hazards model was applied. All statistical analyses were conducted using the R software platform and relative survival estimates using SEER*stat software. The outcome was the time between the first breast cancer diagnosis and time to death.

Five-year age-standardized net survival was estimated using [Pohar-Perme methods]("https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1541-0420.2011.01640.x"), stratified by subtype, stage, and SES status. Life tables by age, sex, race, ethnicity, and socioeconomic level (SES status) were constructed, validated, and provided by [SEER]("https://seer.cancer.gov/expsurvival/"), for detailsl see[ Mariotto et al., ]("https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0201034"). Differences in net survival estimates between the highest SES level and the lowest SES level were estimated using the standard error assuming that the variance of the sum (or difference) is the sum of the variances. To calculate the 95% Confidence Intervals (CIs) for the differences, the formula uses the standard error of the difference (se_diffs) multiplied by 1.96 for a 95% CI. 



## Results

#### Table 1: Characteristics of the Breast Cancer Cohort from 2006 - 2020 by Breast Cancer Subtype
```{r, message=FALSE, warning=FALSE, echo=FALSE}

library(dplyr)
library(tidyr)
library(scales)  # For using percent() function
library(dplyr)
library(tidyr)
library(scales)  # For using percent() function
library(dplyr)
library(tidyr)
library(readr)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(kableExtra)
library(survminer)
library(haven)
library(dplyr)
library(survival)
library(gridExtra)
library(forcats)
```


Most patients across all breast cancer subtypes had localized disease, notably in the HR+/HER2- subtype (67.59%). The HR-/HER2- subtype presented higher proportion of distant metastases (10.99%) compared to 4.33% in HR+/HER2+ patients.

Non-Hispanic White (NHW) individuals were most common across subtypes, especially in HR+/HER2- (68.69%), while Non-Hispanic Black (NHB) individuals had a higher proportion in the HR-/HER2- subtype (20.60%).

Socioeconomic status (SES) showed a clear gradient across all subtypes, with the highest SES group (Group 5) being more pronaunced, particularly in the HR+/HER2- subtype (33.30%). Higher SES groups constituted a larger portion of most subtypes, with the HR-/HER2- subtype having a distinct distribution pattern: the lowest SES quintile encompassed 13.637% of HR+/HER2+ and 17.659% of cases.


```{r, message=FALSE, warning=FALSE, echo=FALSE}
df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

names(df)<-c("age", "year", "race", "stage", "subtype", "er", "tract", "registry_tract", "census2010",
             "urban-area", "poverty", "ylost", "sex", "status", "year_rec", "end_calc", "time")


df1<-subset(df, df$race == "Non-Hispanic White" | 
              df$race == "Non-Hispanic Black"| df$race == "Non-Hispanic Asian or Pacific Islander" | 
              df$race == "Hispanic (All Races)")

df1$race_lab[df1$race == "Non-Hispanic White"]<-"NHW"
df1$race_lab[df1$race == "Non-Hispanic Black"]<-"NHB"
df1$race_lab[df1$race == "Non-Hispanic Asian or Pacific Islander"]<-"API"
df1$race_lab[df1$race == "Hispanic (All Races)"]<-"HIS"


#######

# Assuming you've already prepared 'df' and 'race_lab' is in use
# First, ensure we exclude 'In situ' stage from our calculations
df_filtered <- df1 %>%
  filter(stage != "In situ")

# Calculate the counts and proportions for race_lab within each stage
race_distribution_within_stage <- df_filtered %>%
  count(stage, subtype) %>%
  group_by(subtype) %>%
  mutate(Total = sum(n),
         Proportion = n / Total) %>%
  ungroup()

# Adding a 'Total Stage' summary row for each race_lab
total_stage_summary <- race_distribution_within_stage %>%
  group_by(subtype) %>%
  summarise(stage = "Total Stage",
            n = sum(n),
            Total = sum(Total),
            Proportion = n / Total) %>%
  ungroup()

# Combine the detailed distribution and total summaries
race_distribution_combined <- bind_rows(race_distribution_within_stage, total_stage_summary) %>%
  mutate(Percentage = percent(Proportion)) %>%
  select(stage, subtype, n, Percentage)

# Specify stages in the desired order, ensuring 'Total Stage' is included
stage_order <- c("Localized", "Regional", "Distant", "Unknown/unstaged", "Total Stage")

# Specify race_lab categories in the desired order
race_lab_order <- c("NHW", "NHB", "HIS", "API")

race_lab_order <- c("HR-/HER2-", "HR-/HER2+", "HR+/HER2+", "HR+/HER2-", "RNA*", "Unknown" )

# Ordering stages and filtering out any stages not included in 'stage_order'
race_distribution_combined <- race_distribution_combined %>%
  filter(stage %in% stage_order) %>%
  mutate(stage = factor(stage, levels = stage_order),
         race_lab = factor(subtype, levels = race_lab_order)) %>%
  arrange(stage)

# Pivot wider to format for the desired column order
wide_format_race_within_stage_with_totals <- race_distribution_combined %>%
  pivot_wider(names_from = subtype, values_from = c(n, Percentage), names_glue = "{subtype}_{.value}")
#names(wide_format_race_within_stage_with_totals)
# Manually specify the column order based on your requirement
column_order <- c("stage",
                  "HR-/HER2-_n", "HR-/HER2-_Percentage",
                  "HR-/HER2+_n", "HR-/HER2+_Percentage",
                  "HR+/HER2+_n", "HR+/HER2+_Percentage",
                  "HR+/HER2-_n", "HR+/HER2-_Percentage",
                  "Recode not available_n", "Recode not available_Percentage",
                  "Unknown_n" , "Unknown_Percentage")

# Ensure the wide format table only contains the columns in 'column_order', which matches your requested order
wide_stage <- wide_format_race_within_stage_with_totals %>%
  select(all_of(column_order))

# View the final table

#### Stage


df_filtered <- df1 %>%
  filter(stage != "In situ")

# Assuming 'df' is your data frame and 'subtype' captures the race variable
# Defining Stage order
stage_order <- c("Localized", "Regional", "Distant", "Unknown/unstaged")

# Calculate counts and proportions for each race within stage categories
race_stage_distribution <- df_filtered %>%
  filter(!stage %in% c("Blank(s)")) %>% # Optional: Exclude "Blank(s)" if it's not needed
  count(subtype, stage) %>%
  group_by(subtype) %>%
  mutate(Total = sum(n),
         Proportion = n / Total) %>%
  ungroup() %>%
  mutate(Percentage = percent(Proportion)) %>%
  select(subtype, stage, n, Percentage)

# Adding a 'Total' summary row for each race across all stage categories
total_summary_race <- race_stage_distribution %>%
  group_by(subtype) %>%
  summarise(stage = "Total",
            n = sum(n),
            Percentage = "100%") %>% # In 'Total', all entries per race are considered, hence 100%
  ungroup()

# Combine the detailed distribution and 'Total' summaries
race_stage_combined <- bind_rows(race_stage_distribution, total_summary_race) %>%
  arrange(subtype, stage)

# Pivot wider for the final summary, focusing on race and stage categories
wide_stage <- race_stage_combined %>%
  pivot_wider(names_from = subtype, values_from = c(n, Percentage), names_glue = "{subtype}_{.value}") %>%
  arrange(match(stage, stage_order)) # Order rows based on stage categories

# Print the final summary table




#### SES groups

# Assuming 'df' is your dataframe and 'subtype' captures the race variable
# Defining SES groups order
ses_order <- c("Group 1 (lowest SES)", "Group 2", "Group 3", "Group 4", "Group 5 (highest SES)", "Blank(s)")

# Calculate counts and proportions for each race within SES groups
race_ses_distribution <- df1 %>%
  filter(!ylost %in% c("Blank(s)")) %>% # Optional: Exclude "Blank(s)" if it's not needed
  count(subtype, ylost) %>%
  group_by(subtype) %>%
  mutate(Total = sum(n),
         Proportion = n / Total) %>%
  ungroup() %>%
  mutate(Percentage = percent(Proportion)) %>%
  select(subtype, ylost, n, Percentage)

# Adding a 'Total' summary row for each race across all SES groups
total_summary_race <- race_ses_distribution %>%
  group_by(subtype) %>%
  summarise(ylost = "Total",
            n = sum(n),
            Percentage = "100%") %>% # In 'Total', all entries per race are considered, hence 100%
  ungroup()

# Combine the detailed distribution and 'Total' summaries
race_ses_combined <- bind_rows(race_ses_distribution, total_summary_race) %>%
  arrange(subtype, ylost)

# Pivot wider for the final summary, focusing on race and SES categories
wide_ses <- race_ses_combined %>%
  pivot_wider(names_from = subtype, values_from = c(n, Percentage), names_glue = "{subtype}_{.value}") %>%
  arrange(match(ylost, ses_order)) # Order rows based on SES groups

# Set the column order for races, if required
# Column order can adhere to a specific race order if provided. Otherwise, adjust manually as needed.

# Print the final summary table



#### race_lab

df1a<-subset(df1, df1$year >=2010)
df_filtered <- df1a %>%
  filter(race_lab != "In situ")

# Assuming 'df' is your data frame and 'subtype' captures the race variable
# Defining race_lab order
race_lab_order <- c("HR+/HER2-","HR-/HER2-","not available", "HR-/HER2+", "Unknown", "HR+/HER2+")

# Calculate counts and proportions for each race within race_lab categories
race_race_lab_distribution <- df_filtered %>%
  filter(!race_lab %in% c("Blank(s)")) %>% # Optional: Exclude "Blank(s)" if it's not needed
  count(subtype, race_lab) %>%
  group_by(subtype) %>%
  mutate(Total = sum(n),
         Proportion = n / Total) %>%
  ungroup() %>%
  mutate(Percentage = percent(Proportion)) %>%
  select(subtype, race_lab, n, Percentage)

# Adding a 'Total' summary row for each race across all race_lab categories
total_summary_race <- race_race_lab_distribution %>%
  group_by(subtype) %>%
  summarise(race_lab = "Total",
            n = sum(n),
            Percentage = "100%") %>% # In 'Total', all entries per race are considered, hence 100%
  ungroup()

# Combine the detailed distribution and 'Total' summaries
race_race_lab_combined <- bind_rows(race_race_lab_distribution, total_summary_race) %>%
  arrange(subtype, race_lab)

# Pivot wider for the final summary, focusing on race and race_lab categories
wide_race_lab <- race_race_lab_combined %>%
  pivot_wider(names_from = subtype, values_from = c(n, Percentage), names_glue = "{subtype}_{.value}") %>%
  arrange(match(race_lab, race_lab_order)) # Order rows based on race_lab categories

# Print the final summary table


#### Subtype


df_filtered <- df1 %>%
  filter(subtype != "In situ")

# Assuming 'df' is your data frame and 'race_lab' captures the race variable
# Defining subtype order
subtype_order <- c("HR+/HER2-","HR-/HER2-","not available", "HR-/HER2+", "Unknown", "HR+/HER2+")

# Calculate counts and proportions for each race within subtype categories
race_subtype_distribution <- df_filtered %>%
  filter(!subtype %in% c("Blank(s)")) %>% # Optional: Exclude "Blank(s)" if it's not needed
  count(race_lab, subtype) %>%
  group_by(race_lab) %>%
  mutate(Total = sum(n),
         Proportion = n / Total) %>%
  ungroup() %>%
  mutate(Percentage = percent(Proportion)) %>%
  select(race_lab, subtype, n, Percentage)

# Adding a 'Total' summary row for each race across all subtype categories
total_summary_race <- race_subtype_distribution %>%
  group_by(race_lab) %>%
  summarise(subtype = "Total",
            n = sum(n),
            Percentage = "100%") %>% # In 'Total', all entries per race are considered, hence 100%
  ungroup()

# Combine the detailed distribution and 'Total' summaries
race_subtype_combined <- bind_rows(race_subtype_distribution, total_summary_race) %>%
  arrange(race_lab, subtype)

# Pivot wider for the final summary, focusing on race and subtype categories
wide_subtype <- race_subtype_combined %>%
  pivot_wider(names_from = race_lab, values_from = c(n, Percentage), names_glue = "{race_lab}_{.value}") %>%
  arrange(match(subtype, subtype_order)) # Order rows based on subtype categories

# Print the final summary table


##### Poverty


df_filtered <- df1 %>%
  filter(poverty != "In situ")

# Assuming 'df' is your data frame and 'subtype' captures the race variable
# Defining poverty order
poverty_order <- c("Not persistent poverty census tract", "Persistent poverty census tract", "Blank(s)" )

# Calculate counts and proportions for each race within poverty categories
race_poverty_distribution <- df_filtered %>%
  filter(!poverty %in% c("Blank(s)")) %>% # Optional: Exclude "Blank(s)" if it's not needed
  count(subtype, poverty) %>%
  group_by(subtype) %>%
  mutate(Total = sum(n),
         Proportion = n / Total) %>%
  ungroup() %>%
  mutate(Percentage = percent(Proportion)) %>%
  select(subtype, poverty, n, Percentage)

# Adding a 'Total' summary row for each race across all poverty categories
total_summary_race <- race_poverty_distribution %>%
  group_by(subtype) %>%
  summarise(poverty = "Total",
            n = sum(n),
            Percentage = "100%") %>% # In 'Total', all entries per race are considered, hence 100%
  ungroup()

# Combine the detailed distribution and 'Total' summaries
race_poverty_combined <- bind_rows(race_poverty_distribution, total_summary_race) %>%
  arrange(subtype, poverty)

# Pivot wider for the final summary, focusing on race and poverty categories
wide_poverty <- race_poverty_combined %>%
  pivot_wider(names_from = subtype, values_from = c(n, Percentage), names_glue = "{subtype}_{.value}") %>%
  arrange(match(poverty, poverty_order)) # Order rows based on poverty categories

# Print the final summary table

### ER

df_filtereerdf_filtered <- df1 %>%
  filter(er != "In situ")

# Assuming 'df' is your data frame and 'subtype' captures the race variable
# Defining er order
er_order <- c("Positive", "Negative", "Recode not available", "Borderline/Unknown")

# Calculate counts and proportions for each race within er categories
race_er_distribution <- df_filtered %>%
  filter(!er %in% c("Blank(s)")) %>% # Optional: Exclude "Blank(s)" if it's not needed
  count(subtype, er) %>%
  group_by(subtype) %>%
  mutate(Total = sum(n),
         Proportion = n / Total) %>%
  ungroup() %>%
  mutate(Percentage = percent(Proportion)) %>%
  select(subtype, er, n, Percentage)

# Adding a 'Total' summary row for each race across all er categories
total_summary_race <- race_er_distribution %>%
  group_by(subtype) %>%
  summarise(er = "Total",
            n = sum(n),
            Percentage = "100%") %>% # In 'Total', all entries per race are considered, hence 100%
  ungroup()

# Combine the detailed distribution and 'Total' summaries
race_er_combined <- bind_rows(race_er_distribution, total_summary_race) %>%
  arrange(subtype, er)

# Pivot wider for the final summary, focusing on race and er categories
wide_er <- race_er_combined %>%
  pivot_wider(names_from = subtype, values_from = c(n, Percentage), names_glue = "{subtype}_{.value}") %>%
  arrange(match(er, er_order)) # Order rows based on er categories

# Print the final summary table




##

names(wide_stage)[1]<-c("var")


names(wide_er)[1]<-c("var")


names(wide_race_lab)[1]<-c("var")


names(wide_ses)[1]<-c("var")


names(wide_poverty)[1]<-c("var")




# Add the dplyr package for using slice function
library(dplyr)

# Create a data frame


# Define new row values
new_stage <- data.frame(var = "Stage", 
                        `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                        `HR+/HER2-_n` = 0 , `HR+/HER2-_Percentage` = "==========", 
                        `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                        `HR-/HER2+_n` = 0 , `HR-/HER2+_Percentage` = "==========", 
                        `RNA_n` = 0 , `RNA_Percentage` = "==========", 
                        `Unknown_n` = 0 , `Unknown_Percentage` = "==========")



new_er <- data.frame(var = "ER status",`HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                     `HR+/HER2-_n` = 0 , `HR+/HER2-_Percentage` = "==========", 
                     `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                     `HR-/HER2+_n` = 0 , `HR-/HER2+_Percentage` = "==========", 
                     `RNA_n` = 0 , `RNA_Percentage` = "==========", 
                     `Unknown_n` = 0 , `Unknown_Percentage` = "==========")


new_race <- data.frame(var = "Subtype", `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                       `HR+/HER2-_n` = 0 , `HR+/HER2-_Percentage` = "==========", 
                       `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                       `HR-/HER2+_n` = 0 , `HR-/HER2+_Percentage` = "==========", 
                       `RNA_n` = 0 , `RNA_Percentage` = "==========", 
                       `Unknown_n` = 0 , `Unknown_Percentage` = "==========")
new_ses <- data.frame(var = "SES status",`HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                      `HR+/HER2-_n` = 0 , `HR+/HER2-_Percentage` = "==========", 
                      `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                      `HR-/HER2+_n` = 0 , `HR-/HER2+_Percentage` = "==========", 
                      `RNA_n` = 0 , `RNA_Percentage` = "==========", 
                      `Unknown_n` = 0 , `Unknown_Percentage` = "==========")
new_poverty <- data.frame(var = "Poverty", `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                          `HR+/HER2-_n` = 0 , `HR+/HER2-_Percentage` = "==========", 
                          `HR-/HER2-_n` = 0 , `HR-/HER2-_Percentage` = "==========", 
                          `HR-/HER2+_n` = 0 , `HR-/HER2+_Percentage` = "==========", 
                          `RNA_n` = 0 , `RNA_Percentage` = "==========", 
                          `Unknown_n` = 0 , `Unknown_Percentage` = "==========")

# Specify the position (row number) where you want to add the new row
position <- 0
# Add the new row at the specified position
df3 <- bind_rows(slice(wide_stage, 0:(position - 0)), new_stage, slice(wide_stage, position:nrow(wide_stage)))

df4 <- bind_rows(slice(wide_er, 0:(position - 0)), new_er, slice(wide_er, position:nrow(wide_er)))

df5 <- bind_rows(slice(wide_race_lab, 0:(position - 0)), new_race, slice(wide_race_lab, position:nrow(wide_race_lab)))

df6 <- bind_rows(slice(wide_ses, 0:(position - 0)), new_ses, slice(wide_ses, position:nrow(wide_ses)))

df7 <- bind_rows(slice(wide_poverty, 0:(position - 0)), new_poverty, slice(wide_poverty, position:nrow(wide_poverty)))


df2<-rbind(df3,df4,df5,df6,df7)

df2<-df2[c(1,2,8, 3, 9, 4, 10, 5, 11, 6, 12, 7, 13)]

names(df2)<-c("var", "HR+/HER2+", "_p", "HR+/HER2-", "_p"
              , "HR-/HER2+", "_p", "HR-/HER2-", "_p",
              "RNA_n", "_p", "Unknown" , "_p" )

#kbl(df2) %>%
# kable_styling(bootstrap_options = "striped", font_size = 1)

knitr::kable(df2, col.names = gsub("[.]", " ", names(df2)))

```



#### Figure 1 - Hazard Ratios and 95% Confidence Intervals.

Individuals with the HR-/HER2+ subtype exhibited the highest hazard ratio (HR) of 1.95 (95% CI 1.85-2.06), closely followed by the HR+/HER2+ subtype with an HR of 1.89 (95% CI 1.81-1.97). Localized stage cancer had an HR of 1.96 (95% CI 1.92-2.00), indicating a significant impact of early disease stages among lower socioeconomic status (SES) quintiles, while distant stage cancer reported a lower HR of 1.40 (95% CI 1.35-1.46).

In the highest SES quintile, both the HR-/HER2+ subtype and localized stage cancer showed notably low HRs of 0.51 (95% CI 0.41-0.62) and 0.51 (95% CI 0.47-0.55) respectively. Conversely, in the lowest SES quintile, those with HR+/HER2- subtype had an HR of 1.74 (95% CI 1.71-1.78), but this figure dropped to 0.57 (95% CI 0.54-0.61) for individuals in the highest SES quintile with the same cancer subtype.


```{r, message=FALSE, warning=FALSE, echo=FALSE}
df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

names(df)<-c("age1", "year_follow_up", "race", "stage", "subtype", "er", "tract", "registry_tract", "census2010",
             "urban-area", "poverty", "ylost", "sex", "status", "year_rec", "end_calc", "time")

df1<-subset(df, df$race == "Non-Hispanic White" | 
              df$race == "Non-Hispanic Black"| df$race == "Non-Hispanic Asian or Pacific Islander" | 
              df$race == "Hispanic (All Races)")

df1$race_lab[df1$race == "Non-Hispanic White"]<-"NHW"
df1$race_lab[df1$race == "Non-Hispanic Black"]<-"NHB"
df1$race_lab[df1$race == "Non-Hispanic Asian or Pacific Islander"]<-"API"
df1$race_lab[df1$race == "Hispanic (All Races)"]<-"HIS"

df1$age[df1$age1 == "35-39 years"]<-37.5
df1$age[df1$age1 == "40-44 years"]<-42.5
df1$age[df1$age1 == "45-49 years"]<-47.5
df1$age[df1$age1 == "50-54 years"]<-52.5
df1$age[df1$age1 == "55-59 years"]<-57.5
df1$age[df1$age1 == "60-64 years"]<-62.5
df1$age[df1$age1 == "65-69 years"]<-67.5
df1$age[df1$age1 == "70-74 years"]<-72.5
df1$age[df1$age1 == "75-79 years"]<-77.5
df1$age[df1$age1 == "80-84 years"]<-82.5

df1$status_lab[df1$status == "Alive"]<-1
df1$status_lab[df1$status == "Dead"]<-2

df4<-df1[c("year_follow_up", "age","race_lab" ,"status_lab","time", "stage" ,"er", "subtype", "poverty", "ylost")]

names(df4)[3:4]<-c("race", "status")


## "HR+/HER2-"
df4a<-subset(df4, df4$subtype == "HR+/HER2-")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)


cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1, caption = "Summary of Cox model")
tab1 <- tab1[7, ]
tab1$index<-"HR+/HER2-"


## "HR+/HER2+"

df4a<-subset(df4, df4$subtype == "HR+/HER2+")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)


cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab2 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab2, caption = "Summary of Cox model")
tab2 <- tab2[7, ]
tab2$index<-"HR+/HER2+"

## "HR-/HER2-"

df4a<-subset(df4, df4$subtype == "HR-/HER2-")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab3 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab3, caption = "Summary of Cox model")
tab3 <- tab3[7, ]
tab3$index<-"HR-/HER2-"


## "HR-/HER2+"

df4a<-subset(df4, df4$subtype == "HR-/HER2+")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab4 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab4, caption = "Summary of Cox model")
tab4 <- tab4[7, ]
tab4$index<-"HR-/HER2+"

#

## ER +
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4aa<-subset(df4a, df4a$er == "Positive")
df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1a <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1a, caption = "Summary of Cox model")
tab1a <- tab1a[7, ]
tab1a$index<-"ER+"

#

## ER -

df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4aa<-subset(df4a, df4a$er == "Negative")
df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1b <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1b, caption = "Summary of Cox model")
tab1b <- tab1b[7, ]
tab1b$index<-"ER-"

##

## Localized

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Localized")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1c <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1c, caption = "Summary of Cox model")
tab1c <- tab1c[5, ]
tab1c$index<-"Localized stage"


## Regional

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Regional")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
#df5$stage<-as.factor(df5$stage)
#df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1d <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1d, caption = "Summary of Cox model")
tab1d <- tab1d[5, ]
tab1d$index<-"Regional stage"

#
## Distant

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Distant")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
#df5$stage<-as.factor(df5$stage)
#df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1e <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1e, caption = "Summary of Cox model")
tab1e <- tab1e[5, ]
tab1e$index<-"Distant stage"

#
tab5<-rbind(tab1, tab2, tab3, tab4, tab1a, tab1b, tab1c, tab1d, tab1e)

tab5<-as.data.frame(tab5)

# Calculate lower and upper confidence intervals
tab5$lower_CI <- tab5[["exp(coef)"]] - 1.96 * tab5[["se(coef)"]] 
tab5$upper_CI <- tab5[["exp(coef)"]] + 1.96 * tab5[["se(coef)"]] 

# View the updated dataset with lower and upper CI values
#print(tab5)

```

```{r, message=FALSE, warning=FALSE, echo=FALSE}


df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

names(df)<-c("age1", "year_follow_up", "race", "stage", "subtype", "er", "tract", "registry_tract", "census2010",
             "urban-area", "poverty", "ylost", "sex", "status", "year_rec", "end_calc", "time")

df1<-subset(df, df$race == "Non-Hispanic White" | 
              df$race == "Non-Hispanic Black"| df$race == "Non-Hispanic Asian or Pacific Islander" | 
              df$race == "Hispanic (All Races)")

df1$race_lab[df1$race == "Non-Hispanic White"]<-"NHW"
df1$race_lab[df1$race == "Non-Hispanic Black"]<-"NHB"
df1$race_lab[df1$race == "Non-Hispanic Asian or Pacific Islander"]<-"API"
df1$race_lab[df1$race == "Hispanic (All Races)"]<-"HIS"

df1$age[df1$age1 == "35-39 years"]<-37.5
df1$age[df1$age1 == "40-44 years"]<-42.5
df1$age[df1$age1 == "45-49 years"]<-47.5
df1$age[df1$age1 == "50-54 years"]<-52.5
df1$age[df1$age1 == "55-59 years"]<-57.5
df1$age[df1$age1 == "60-64 years"]<-62.5
df1$age[df1$age1 == "65-69 years"]<-67.5
df1$age[df1$age1 == "70-74 years"]<-72.5
df1$age[df1$age1 == "75-79 years"]<-77.5
df1$age[df1$age1 == "80-84 years"]<-82.5

df1$status_lab[df1$status == "Alive"]<-1
df1$status_lab[df1$status == "Dead"]<-2

df4<-df1[c("year_follow_up", "age","race_lab" ,"status_lab","time", "stage" ,"er", "subtype", "poverty", "ylost")]

names(df4)[3:4]<-c("race", "status")


## "HR+/HER2-"
df4a<-subset(df4, df4$subtype == "HR+/HER2-")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)


cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1, caption = "Summary of Cox model")
tab1 <- tab1[10, ]
tab1$index<-"HR+/HER2-"


## "HR+/HER2+"

df4a<-subset(df4, df4$subtype == "HR+/HER2+")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)


cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab2 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab2, caption = "Summary of Cox model")
tab2 <- tab2[10, ]
tab2$index<-"HR+/HER2+"

## "HR-/HER2-"

df4a<-subset(df4, df4$subtype == "HR-/HER2-")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab3 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab3, caption = "Summary of Cox model")
tab3 <- tab3[10, ]
tab3$index<-"HR-/HER2-"


## "HR-/HER2+"

df4a<-subset(df4, df4$subtype == "HR-/HER2+")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab4 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab4, caption = "Summary of Cox model")
tab4 <- tab4[10, ]
tab4$index<-"HR-/HER2+"

#

## ER +
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4aa<-subset(df4a, df4a$er == "Positive")
df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1a <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1a, caption = "Summary of Cox model")
tab1a <- tab1a[10, ]
tab1a$index<-"ER+"

#

## ER -

df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4aa<-subset(df4a, df4a$er == "Negative")
df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1b <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1b, caption = "Summary of Cox model")
tab1b <- tab1b[10, ]
tab1b$index<-"ER-"

##

## Localized

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Localized")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1c <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1c, caption = "Summary of Cox model")
tab1c <- tab1c[8, ]
tab1c$index<-"Localized stage"


## Regional

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Regional")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
#df5$stage<-as.factor(df5$stage)
#df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1d <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1d, caption = "Summary of Cox model")
tab1d <- tab1d[8, ]
tab1d$index<-"Regional stage"

#
## Distant

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Distant")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
#df5$stage<-as.factor(df5$stage)
#df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1e <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1e, caption = "Summary of Cox model")
tab1e <- tab1e[8, ]
tab1e$index<-"Distant stage"

#
tab5a<-rbind(tab1, tab2, tab3, tab4, tab1a, tab1b, tab1c, tab1d, tab1e)

tab5a<-as.data.frame(tab5a)

# Calculate lower and upper confidence intervals
tab5a$lower_CI <- tab5a[["exp(coef)"]] - 1.96 * tab5a[["se(coef)"]] 
tab5a$upper_CI <- tab5a[["exp(coef)"]] + 1.96 * tab5a[["se(coef)"]] 

# View the updated dataset with lower and upper CI values

```






```{r, message=FALSE, warning=FALSE, echo=FALSE}
df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

names(df)<-c("age1", "year_follow_up", "race", "stage", "subtype", "er", "tract", "registry_tract", "census2010",
             "urban-area", "poverty", "ylost", "sex", "status", "year_rec", "end_calc", "time")

df1<-subset(df, df$race == "Non-Hispanic White" | 
              df$race == "Non-Hispanic Black"| df$race == "Non-Hispanic Asian or Pacific Islander" | 
              df$race == "Hispanic (All Races)")

df1$race_lab[df1$race == "Non-Hispanic White"]<-"NHW"
df1$race_lab[df1$race == "Non-Hispanic Black"]<-"NHB"
df1$race_lab[df1$race == "Non-Hispanic Asian or Pacific Islander"]<-"API"
df1$race_lab[df1$race == "Hispanic (All Races)"]<-"HIS"

df1$age[df1$age1 == "35-39 years"]<-37.5
df1$age[df1$age1 == "40-44 years"]<-42.5
df1$age[df1$age1 == "45-49 years"]<-47.5
df1$age[df1$age1 == "50-54 years"]<-52.5
df1$age[df1$age1 == "55-59 years"]<-57.5
df1$age[df1$age1 == "60-64 years"]<-62.5
df1$age[df1$age1 == "65-69 years"]<-67.5
df1$age[df1$age1 == "70-74 years"]<-72.5
df1$age[df1$age1 == "75-79 years"]<-77.5
df1$age[df1$age1 == "80-84 years"]<-82.5

df1$status_lab[df1$status == "Alive"]<-1
df1$status_lab[df1$status == "Dead"]<-2

df4<-df1[c("year_follow_up", "age","race_lab" ,"status_lab","time", "stage" ,"er", "subtype", "poverty", "ylost")]

names(df4)[3:4]<-c("race", "status")


## "HR+/HER2-"
df4a<-subset(df4, df4$subtype == "HR+/HER2-")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)


cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1, caption = "Summary of Cox model")
tab1 <- tab1[8, ]
tab1$index<-"HR+/HER2-"


## "HR+/HER2+"

df4a<-subset(df4, df4$subtype == "HR+/HER2+")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)


cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab2 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab2, caption = "Summary of Cox model")
tab2 <- tab2[8, ]
tab2$index<-"HR+/HER2+"

## "HR-/HER2-"

df4a<-subset(df4, df4$subtype == "HR-/HER2-")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab3 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab3, caption = "Summary of Cox model")
tab3 <- tab3[8, ]
tab3$index<-"HR-/HER2-"


## "HR-/HER2+"

df4a<-subset(df4, df4$subtype == "HR-/HER2+")
#df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab4 <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab4, caption = "Summary of Cox model")
tab4 <- tab4[8, ]
tab4$index<-"HR-/HER2+"

#

## ER +
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4aa<-subset(df4a, df4a$er == "Positive")
df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1a <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1a, caption = "Summary of Cox model")
tab1a <- tab1a[8, ]
tab1a$index<-"ER+"

#

## ER -

df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4aa<-subset(df4a, df4a$er == "Negative")
df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + stage + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1b <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1b, caption = "Summary of Cox model")
tab1b <- tab1b[8, ]
tab1b$index<-"ER-"

##

## Localized

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Localized")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
df5$stage<-as.factor(df5$stage)
df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1c <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1c, caption = "Summary of Cox model")
tab1c <- tab1c[6, ]
tab1c$index<-"Localized stage"


## Regional

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Regional")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
#df5$stage<-as.factor(df5$stage)
#df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1d <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1d, caption = "Summary of Cox model")
tab1d <- tab1d[6, ]
tab1d$index<-"Regional stage"

#
## Distant

#
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
#df4aa<-subset(df4a, df4a$er == "Negative")
#df4b<-subset(df4aa, df4aa$stage == "Localized" | df4aa$stage == "Regional" | df4aa$stage == "Distant" )
df4b<-subset(df4a, df4a$stage == "Distant")
#df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4b, df4b$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )


df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
#fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
#df5$stage<-as.factor(df5$stage)
#df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 1 (lowest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)

cox_model <- coxph(surv_obj ~ age + race +ylost, data = df5) 
summary_cox <- summary(cox_model)
tab1e <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1e, caption = "Summary of Cox model")
tab1e <- tab1e[6, ]
tab1e$index<-"Distant stage"

#
tab5b<-rbind(tab1, tab2, tab3, tab4, tab1a, tab1b, tab1c, tab1d, tab1e)

tab5b<-as.data.frame(tab5b)

# Calculate lower and upper confidence intervals
tab5b$lower_CI <- tab5b[["exp(coef)"]] - 1.96 * tab5b[["se(coef)"]] 
tab5b$upper_CI <- tab5b[["exp(coef)"]] + 1.96 * tab5b[["se(coef)"]] 

# View the updated dataset with lower and upper CI values

```






```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Create a data frame for plotting with required columns for tab5
# Create a data frame for plotting with required columns for tab5
plot_data_tab5 <- data.frame(
  Hazard_Rate = tab5[["exp(coef)"]],
  lower_CI = tab5[["lower_CI"]],
  upper_CI = tab5[["upper_CI"]],
  label = tab5[["index"]],
  SES_quintile = "lowest SES"
)

# Create a data frame for plotting with required columns for tab5a
plot_data_tab5a <- data.frame(
  Hazard_Rate = tab5a[["exp(coef)"]],
  lower_CI = tab5a[["lower_CI"]],
  upper_CI = tab5a[["upper_CI"]],
  label = tab5a[["index"]],
  SES_quintile = "highest SES"
)
#
# Create a data frame for plotting with required columns for tab5
plot_data_tab5b <- data.frame(
  Hazard_Rate = tab5b[["exp(coef)"]],
  lower_CI = tab5b[["lower_CI"]],
  upper_CI = tab5b[["upper_CI"]],
  label = tab5b[["index"]],
  SES_quintile = "Middle SES"
)


# Combine the two data frames
combined_data <- rbind(plot_data_tab5, plot_data_tab5a, plot_data_tab5b)

# Create the combined forest plot with both comparisons overlapped with specific colors for each SES level
ggplot(combined_data, aes(y = label, x = Hazard_Rate, color = SES_quintile, label = sprintf("%.2f", Hazard_Rate))) +
  geom_point(size = 2.5, position = position_dodge(width = 0.0), shape = 16) +  # Dot for Hazard Rate (dodged) with shape 16 (filled circle)
  geom_errorbarh(aes(xmin = lower_CI, xmax = upper_CI), height = 0.2) +  # Horizontal error bars for CI
  geom_vline(xintercept = 1, linetype = "dashed", color = "black") +  # Add a vertical line at HR = 1 in black
  xlim(0, 2.5) +  # Set x-axis limits from 0 to 3
  labs(title = "", x = "HR (95%CI)", y = "") +
  scale_color_manual(values = c("lowest SES" = "darkred", "Middle SES" = "darkgray", "highest SES" = "darkblue")) +  # Set custom colors for SES quintiles
  theme_minimal() +  # Apply a minimal theme
  theme(legend.position = "bottom") +  # Position the legend at the bottom
  guides(color = guide_legend(title = "SES Quintile"))  # Set legend title



```

Note: Adjusted hazard ratios and 95% confidence intervals for the relative risk of death from malignant breast cancer in the most deprived quintile (red) and least deprived quintile (blue) by molecular subtype, ER status, and stage. The models are adjusted for age, stage, and race/ethnicity and poverty. The analysis accounts for potential confounding factors and is based on all-cause mortality.






```{r, message=FALSE, warning=FALSE, echo=FALSE}



df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

names(df)<-c("age1", "year_follow_up", "race", "stage", "subtype", "er", "tract", "registry_tract", "census2010",
             "urban-area", "poverty", "ylost", "sex", "status", "year_rec", "end_calc", "time")

df1<-subset(df, df$race == "Non-Hispanic White" | 
              df$race == "Non-Hispanic Black"| df$race == "Non-Hispanic Asian or Pacific Islander" | 
              df$race == "Hispanic (All Races)")

df1$race_lab[df1$race == "Non-Hispanic White"]<-"NHW"
df1$race_lab[df1$race == "Non-Hispanic Black"]<-"NHB"
df1$race_lab[df1$race == "Non-Hispanic Asian or Pacific Islander"]<-"API"
df1$race_lab[df1$race == "Hispanic (All Races)"]<-"HIS"

df1$age[df1$age1 == "35-39 years"]<-37.5
df1$age[df1$age1 == "40-44 years"]<-42.5
df1$age[df1$age1 == "45-49 years"]<-47.5
df1$age[df1$age1 == "50-54 years"]<-52.5
df1$age[df1$age1 == "55-59 years"]<-57.5
df1$age[df1$age1 == "60-64 years"]<-62.5
df1$age[df1$age1 == "65-69 years"]<-67.5
df1$age[df1$age1 == "70-74 years"]<-72.5
df1$age[df1$age1 == "75-79 years"]<-77.5
df1$age[df1$age1 == "80-84 years"]<-82.5

df1$status_lab[df1$status == "Alive"]<-1
df1$status_lab[df1$status == "Dead"]<-2

df4<-df1[c("year_follow_up", "age","race_lab" ,"status_lab","time", "stage" ,"er", "subtype", "poverty", "ylost")]

names(df4)[3:4]<-c("race", "status")

## "HR+/HER2-"
#df4a<-subset(df4, df4$subtype == "HR+/HER2-")
df4a<-subset(df4, df4$subtype == "HR+/HER2-" | df4$subtype == "HR-/HER2-" | df4$subtype == "HR-/HER2+" | df4$subtype == "HR+/HER2+" )
df4b<-subset(df4a, df4a$stage == "Localized" | df4a$stage == "Regional" | df4a$stage == "Distant" )
df4c<-subset(df4b, df4b$er == "Positive" | df4b$er == "Negative" )
df4d<-subset(df4c, df4c$poverty != "Blank(s)" )
df4e<-subset(df4d, df4d$ylost != "Blank(s)" )



df5 <- subset(df4e, year_follow_up >= 2003 & year_follow_up <= 2020 & df4e$time <=60 )
surv_obj <- Surv(time = df5$time / 12, event = df5$status == 2)
# Fit a survival curve, stratified by 'stage'
fit <- survfit(surv_obj ~ race, data = df5)

# Fit Cox PH model
df5$race<-as.factor(df5$race)
df5$race <- relevel(df5$race, "NHW")
#df5$stage<-as.factor(df5$stage)
#df5$stage <- relevel(df5$stage, "Localized")
df5$ylost<-as.factor(df5$ylost)
df5$ylost <- relevel(df5$ylost, "Group 5 (highest SES)")
df5$poverty<-as.factor(df5$poverty)
df5$poverty <- relevel(df5$poverty, "Not persistent poverty census tract")
df5$age<-as.numeric(df5$age)


cox_model <- coxph(surv_obj ~ age + stage + race +ylost+ poverty, data = df5) 
summary_cox <- summary(cox_model)
tab1b <- as.data.frame(summary_cox$coefficients)

#knitr::kable(tab1, caption = "Summary of Cox model")
tab1b <- tab1b[7:10, ]
tab1b <- as.data.frame(tab1b)

tab1b$index <- factor(c(levels = c("lowest SES", "Group 2", "Group 3", "Group 4")))


# Calculate lower and upper confidence intervals
tab1b$lower_CI <- tab1b[["exp(coef)"]] - 1.96 * tab1b[["se(coef)"]] 
tab1b$upper_CI <- tab1b[["exp(coef)"]] + 1.96 * tab1b[["se(coef)"]] 


# Create a new data frame with fixed column names
new_data <- data.frame(
  coef = 1,
  `exp(coef)` = 1,
  `se(coef)` = 1,
  z = 1,
  `Pr(>|z|)` = 1,
  index = "Group 5",
  lower_CI = 1,
  upper_CI = 1
)

names(tab1b)<-c("coef",      "exp(coef)", "se(coef)",  "z",         "Pr(>|z|)",  "index",     "lower_CI","upper_CI" )
names(new_data)<-c("coef",      "exp(coef)", "se(coef)",  "z",         "Pr(>|z|)",  "index",     "lower_CI","upper_CI" )

tab1c<-rbind(tab1b, new_data)

tab6<-as.data.frame(tab1c[c(2,6)])

```

#### Figure 2 -  Exposure-response: HR by deprivation (SES status)


The figure below represents an exposure-response relationship between deprivation status (SES) and the hazard ratio for breast cancer mortality. Group 1, which has the lowest SES, shows the highest hazard ratio at 1.70, indicating the highest risk relative to the reference group (Group 5). As SES increases from Group 1 to Group 4, there is a consistent decrease in the hazard ratio, demonstrating a dose-response relationship between SES and breast cancer mortality.



```{r, message=FALSE, warning=FALSE, echo=FALSE}

# Create the tab6 data frame
tab6 <- data.frame(
  "exp(coef)" = c(1.699766, 1.571202, 1.414691, 1.243174, 1.000000),
  "index" = c("Group 1 (lowest SES)", "Group 2", "Group 3", "Group 4", "Group 5")
)


names(tab6)<-c("hr", "index")

# Reverse the order of categories in tab1b$index
tab6$index <- fct_rev(factor(tab6$index))


# Create the dose-response plot with the renamed x-axis labels
ggplot(tab6, aes(x = index, y = hr)) +
  geom_point(color = "black", size = 3) +  
  geom_hline(yintercept = 1, linetype = "dashed", color = "red") +  
  geom_smooth(method = "lm", se = FALSE, color = "black") +  
  coord_cartesian(ylim = c(0, 2)) +  
  labs(title = "Exposure-response",
       x = "Deprivation quintiles",
       y = "Hazard Ratio") +
  theme_minimal() +
  scale_x_discrete(labels = c("highest", "Group 4", "Group 3", "Group 2", "lowest"))

```
Note: Adjusted hazard ratios and 95% confidence intervals for the relative risk of death from malignant breast cancer in the most deprived quintile (red) adjusted for age, stage, and race/ethnicity and poverty.



#### Table 2 - 5-year relative survival and differences between highest and lowest ses status
These results show differences in net survival rates between the highest and lowest SES (socioeconomic status) across various cancer subtypes and stages. The HR-/HER2+ subtype in the distant stage of cancer reported the most substantial differences in relative survival, with a difference of 20.4 percentage points between the highest and lowest SES groups (95% CI: 13.04 to 27.76). Similarly, the HR+/HER2- subtype in distant stages showed a notable difference in survival rates, with a 12.4 percentage point gap (95% CI: 9.34 to 15.46). HR+/HER2+ at Distant stages showed 18.3 points difference (95%CI 12.7 - 23.8).

```{r, message=FALSE, warning=FALSE, echo=FALSE}
df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_NS_subtype_ylost_stage.csv")

df<-df[c(2,3,4, 5, 7, 14, 22, 23, 17)]
# Rename variables
names(df) <- c("year", "subtype", "yost", "stage", "n","net", "lower_CI", "Upper_CI", "se")
#names(df)[13] <- c("Observed.Age.Std")
#names(df)[19] <- c("Net.Relative.Age.Std")
#names(df)[20] <- c("Net.Relative")
# Filter out rows with "Year of diagnosis" in the 'year' column and convert to numeric
df <- subset(df, df$year != "Year of diagnosis")
df$year <- as.numeric(df$year) + 2005
# Assuming that year == 1991 corresponds to "1992-2020" range in the dataset
df <- subset(df, df$year == 2005) 
df$subtype <- factor(df$subtype, levels = c(0, 1, 2, 3, 4, 5),
                     labels = c("HR+/HER2+", "HR-/HER2+", "HR+/HER2-", "HR-/HER2-", "Unknown", "Recode not available"))

df$yost <- factor(df$yost, levels = c(0, 1, 2, 3, 4, 5),
                  labels = c("lowest", "group 2", "group 3", "group 4", "highest", "Blank(s)"))
df$stage <- factor(df$stage, levels = c(0, 1, 2, 3, 4, 5),
                     labels = c("In situ", "Localized", "Regional", "Distant", "N/A", "Unknown/unstaged"))
## Table
df1a<-subset(df, df$yost == "lowest" | df$yost == "highest")
df1<-subset(df1a, df1a$stage == "Localized" | df1a$stage == "Regional" | df1a$stage == "Distant")

df1<-as.data.frame(df1)

# that can be wrapped in a function or loop.
clean_column <- function(column) {
  column <- gsub("[#*%]", "", column)
  column <- as.numeric(trimws(column))
  return(column)
}

df1$net <- clean_column(df1$net)
df1$lower_CI <- clean_column(df1$lower_CI)
df1$Upper_CI <- clean_column(df1$Upper_CI)
df1$se <- clean_column(df1$se)

df2 <- df1 %>%
  mutate(net_numeric = as.numeric(sub("%", "", net))) %>%
  group_by(subtype, stage) %>%
  summarise(
    difference = max(net_numeric[n == max(n)]) - max(net_numeric[n == min(n)])
  )

df3<-merge(df1, df2, by = c("subtype", "stage"))
df3<-as.data.frame(df3)

# Sort data frame by subtype, year, and Yost levels to ensure 'lowest' comes before 'highest'
df4 <- df3[order(df3$subtype, df3$stage, df3$year, df3$yost),]

# Calculate differences in net survival between highest and lowest Yost levels
# Note: [c(FALSE, TRUE)] selects every second element starting with the second
#       [c(TRUE, FALSE)] selects every second element starting with the first
# This effectively pairs 'highest' net values with 'lowest' by subtracting the latter from the former
diffs <- with(df3, net[c(FALSE, TRUE)] - net[c(TRUE, FALSE)])

# Calculate the standard error of the differences
# The square roots of the sum of the squares of individual 'se' values provide the combined se for the differences
# This acknowledges the principle that the variance of the sum (or difference) is the sum of the variances
se_diffs <- with(df3, sqrt(se[c(FALSE, TRUE)]^2 + se[c(TRUE, FALSE)]^2))

# Calculate the 95% Confidence Intervals (CIs) for the differences
# The formula uses the standard error of the difference (se_diffs) multiplied by 1.96 for a 95% CI
# According to the normal distribution, 1.96 standard deviations cover approximately 95% of the distribution
lower_CI_diffs <- diffs - 1.96 * se_diffs
upper_CI_diffs <- diffs + 1.96 * se_diffs

# Create a data frame to present the results
# It includes the subtype and year (taken from every second row aligning with 'highest')
# along with the calculated difference and its 95% CIs
results <- data.frame(
  Subtype = df3$subtype[c(FALSE, TRUE)],
  Year = df3$year[c(FALSE, TRUE)],
  Difference = diffs,
  Lower_CI_95 = lower_CI_diffs,
  Upper_CI_95 = upper_CI_diffs
)

names(results)[1]<-c("subtype")

# Ensure data is sorted - important for matching pairs correctly
df4 <- df3 %>% arrange(subtype, year, stage, yost)

# Perform group-wise operations
results <- df4 %>%
  # Group data by subtype, year, and stage to ensure calculations are done within each specific group
  group_by(subtype, year, stage) %>%
  # Use summarise to calculate differences within each group, assuming ordering by yost
  summarise(
    Difference = net[yost == "highest"] - net[yost == "lowest"],
    # Calculate standard error for the difference within each group
    Se_diff = sqrt(sum(se[yost == "highest"]^2, se[yost == "lowest"]^2)),
    # Assuming normal distribution for 95% CI 
    Lower_CI_95 = Difference - 1.96 * Se_diff,
    Upper_CI_95 = Difference + 1.96 * Se_diff,
    # Ensuring non-NAs for groups that might not have properly paired entries
    .groups = "drop"
  )

df5<-merge(df3, results, by = c ("subtype", "stage"))
df6<-df5[c(1,2,3,4,5,6,7,8, 12,14,15)]
df7<-subset(df6, df6$subtype != "Recode not available")
df8<-subset(df7, df7$subtype != "Unknown")

knitr::kable(df8, col.names = gsub("[.]", " ", names(df8)))



```


### The Interaction of Socioeconomic Status and Race/Ethnicity on Breast Cancer Mortality

Table 1 describe the proportion of deprivation (SES) among race and ethnicity groups.


```{r, message=FALSE, warning=FALSE, echo=FALSE}
library(readr)
library(xtable)

df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

names(df)<-c("age1", "year_follow_up", "race", "stage", "subtype", "er", "tract", "registry_tract", "census2010",
             "urban-area", "poverty", "ylost", "sex", "status", "year_rec", "end_calc", "time")

df1<-subset(df, df$race == "Non-Hispanic White" | 
              df$race == "Non-Hispanic Black"| df$race == "Non-Hispanic Asian or Pacific Islander" | 
              df$race == "Hispanic (All Races)")

df1$race_lab[df1$race == "Non-Hispanic White"]<-"NHW"
df1$race_lab[df1$race == "Non-Hispanic Black"]<-"NHB"
df1$race_lab[df1$race == "Non-Hispanic Asian or Pacific Islander"]<-"API"
df1$race_lab[df1$race == "Hispanic (All Races)"]<-"HIS"

df1$age[df1$age1 == "35-39 years"]<-37.5
df1$age[df1$age1 == "40-44 years"]<-42.5
df1$age[df1$age1 == "45-49 years"]<-47.5
df1$age[df1$age1 == "50-54 years"]<-52.5
df1$age[df1$age1 == "55-59 years"]<-57.5
df1$age[df1$age1 == "60-64 years"]<-62.5
df1$age[df1$age1 == "65-69 years"]<-67.5
df1$age[df1$age1 == "70-74 years"]<-72.5
df1$age[df1$age1 == "75-79 years"]<-77.5
df1$age[df1$age1 == "80-84 years"]<-82.5

df1$status_lab[df1$status == "Alive"]<-1
df1$status_lab[df1$status == "Dead"]<-2

df4<-df1[c("year_follow_up", "age","race_lab" ,"status_lab","time", "stage" ,"er", "subtype", "poverty", "ylost")]

names(df4)[3:4]<-c("race", "status")

# Rename varuiable
unique(df4$status)
df4$status1<-NA
df4$status1[df4$status == 1]<-0
df4$status1[df4$status == 2]<-1
#Recode time
df4$time1<-df4$time / 30
#Saving a new dataset
df5<-df4[c(3,6,7,8,9,10,11,12)]
names(df5)[7:8]<-c("MyD", "risktime")

# Theory 


# Ordering the ylost levels
df5$ylost <- factor(df5$ylost, levels = c("Group 1 (lowest SES)", "Group 2", "Group 3", "Group 4", "Group 5 (highest SES)"))

# Creating the table of counts for race by ylost with ordered levels
count_table <- table(df5$ylost, df5$race)

# Calculating the proportion across the ylost groups (margin=2) with ordered levels
frequency_table <- prop.table(count_table, margin=2) 

# Convert to percentages and round for easier interpretation
frequency_percentage <- round(frequency_table * 100, 2)

# Convert both tables to data frames for easier manipulation
count_df <- as.data.frame.matrix(count_table)
frequency_df <- as.data.frame.matrix(frequency_percentage)

# Combine the count and frequency percentage data frames column-wise
combined_cbind <- cbind(count_df, frequency_df)

# Display the combine data frame

combined<-combined_cbind[c(1,5,2,6,3,7,4,8)]
names(combined)<-c("API", "%", "HIS", "%", "NHB", "%", "NHW", "%")
#knitr::kable(combined, col.names = gsub("[.]", " ", names(combined)))


kable(combined, caption = "Table 1 describe the proportion of deprivation (SES) among race and ethnicity groups.", 
      align = c("l", rep("c", 6))) %>%  # Align columns: left for the first column, center for the rest
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE, font_size = 12) %>%
  column_spec(1, bold = TRUE)  # Make the first column bold



```



```{r, message=FALSE, warning=FALSE, echo=FALSE, eval=FALSE}
# Load necessary library
library(readr)

# Read dataset
df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

# Rename variables for readability
names(df) <- c("age1", "year_follow_up", "race", "stage", "subtype", "er", "tract", 
               "registry_tract", "census2010", "urban_area", "poverty", "ylost", "sex", 
               "status", "year_rec", "end_calc", "time")

# Filter dataset for specific races
df1 <- subset(df, df$race %in% c("Non-Hispanic White", "Non-Hispanic Black", 
                                 "Non-Hispanic Asian or Pacific Islander", "Hispanic (All Races)"))

# Recode race
df1$race_lab <- ifelse(df1$race == "Non-Hispanic White", "NHW", 
                       ifelse(df1$race == "Non-Hispanic Black", "NHB", 
                              ifelse(df1$race == "Non-Hispanic Asian or Pacific Islander", "API", "HIS")))

# Recode age based on categories
age_mapping <- setNames(c(37.5, 42.5, 47.5, 52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5), 
                        c("35-39 years", "40-44 years", "45-49 years", "50-54 years",
                          "55-59 years", "60-64 years", "65-69 years", "70-74 years", 
                          "75-79 years", "80-84 years"))
df1$age <- unname(age_mapping[df1$age1])

# Recode status
df1$status_lab <- ifelse(df1$status == "Alive", 1, 2)

# Select and rename specific columns
df4 <- df1[c("year_follow_up", "age", "race_lab", "status_lab", "time", "stage", 
             "er", "subtype", "poverty", "ylost")]
names(df4)[3:4] <- c("race", "status")

# Recode status to binary
df4$status1 <- ifelse(df4$status == 1, 0, 1)

# Recode time to months
df4$time1 <- df4$time

# Subset data for specific subtypes and stages
df4a <- subset(df4, df4$subtype %in% c("HR+/HER2-", "HR-/HER2-", "HR-/HER2+", "HR+/HER2+"))
df4b <- subset(df4a, df4a$stage %in% c("Localized", "Regional", "Distant"))
df4c <- subset(df4b, df4b$er %in% c("Positive", "Negative"))
df4d <- subset(df4c, df4c$poverty != "Blank(s)")
df4e <- subset(df4d, df4d$ylost != "Blank(s)")

# Prepare final dataset for modeling
df5 <- df4e[c(3,6,7,8,9,10,11,12)]
names(df5)[7:8] <- c("MyD", "risktime")

# Relevel factors to specify the reference levels
df5$race <- relevel(as.factor(df5$race), "NHW")
df5$ylost <- relevel(as.factor(df5$ylost), "Group 5 (highest SES)")

# Fit a Generalized Linear Model (GLM) with a Poisson distribution
Mod1_df5 <- glm(MyD ~ as.factor(race) * as.factor(ylost) + offset(log(risktime)), 
                family = "poisson", data = df5)
# Summarize the fitted model
summary(Mod1_df5)

# Estimation of Hazard Ratios (HR) for specific groups based on the Cox model coefficients

# Function definition for estimating hazard ratios (HR) and their confidence intervals
# for specified interactions within a Proportional Hazards model.
EstHR_new <- function(vec, mod) {
  # Create a vector of ones, length equal to the number of variables of interest.
  A <- rep(1, length(vec))
  # Calculate the point estimate of the log HR by multiplying the vector 'A' with
  # the corresponding coefficients from the model for the variables of interest.
  PtEst <- as.numeric(A %*% mod$coefficients[names(mod$coefficients) %in% vec])
  # Calculate the variance of the log HR by using the model's variance-covariance matrix
  # for the variables of interest.
  Var <- as.numeric(A %*% summary(mod)$cov.unscaled[vec, vec] %*% A)
  # Calculate the HR and its 95% confidence interval by exponentiating
  # the point estimate and its confidence bounds.
  res <- exp(PtEst + c(0, -1.96, 1.96) * sqrt(Var))
  return(res)
}

# The code block below demonstrates how to apply the EstHR_new function to
# various combinations of race and SES to estimate hazard ratios.

# Note: Before running these, ensure that variable names are adapted based on the
# summary output of your model (i.e., Mod1_df5 in this case).

# Table I, Reference High HDI and Early stage
#==============================================
#Low SES (NHW)
EstHR(c("as.factor(ylost)Group 1 (lowest SES)"),Mod1_df5)

#Medium SES (NHW)
EstHR(c("as.factor(ylost)Group 3"),Mod1_df5)

# Low SES analysis: Estimate HR for Non-Hispanic Blacks (NHB) in the lowest SES group.
vec_NHB_Group1 <- c("as.factor(race)NHB", "as.factor(ylost)Group 1 (lowest SES)",
                    "as.factor(race)NHB:as.factor(ylost)Group 1 (lowest SES)")
# Using the custom function with the vector and model for estimation.
EstHR_new(vec_NHB_Group1, Mod1_df5)

# Replicating the process for Hispanic (HIS) in the lowest SES group.
vec_HIS_Group1 <- c("as.factor(race)HIS", "as.factor(ylost)Group 1 (lowest SES)",
                    "as.factor(race)HIS:as.factor(ylost)Group 1 (lowest SES)")
EstHR_new(vec_HIS_Group1, Mod1_df5)

# And for Asian or Pacific Islanders (API) in the lowest SES group.
vec_API_Group1 <- c("as.factor(race)API", "as.factor(ylost)Group 1 (lowest SES)",
                    "as.factor(race)API:as.factor(ylost)Group 1 (lowest SES)")
EstHR_new(vec_API_Group1, Mod1_df5)

# Medium SES analysis: Similar approach but for the medium SES group (Group 3).
vec_NHB_Group3 <- c("as.factor(race)NHB", "as.factor(ylost)Group 3",
                    "as.factor(race)NHB:as.factor(ylost)Group 3")
EstHR_new(vec_NHB_Group3, Mod1_df5)

# For Hispanic (HIS) within the medium SES group.
vec_HIS_Group3 <- c("as.factor(race)HIS", "as.factor(ylost)Group 3",
                    "as.factor(race)HIS:as.factor(ylost)Group 3")
EstHR_new(vec_HIS_Group3, Mod1_df5)

# For Asian or Pacific Islanders (API) within the medium SES group.
vec_API_Group3 <- c("as.factor(race)API", "as.factor(ylost)Group 3",
                    "as.factor(race)API:as.factor(ylost)Group 3")
EstHR_new(vec_API_Group3, Mod1_df5)

# Additional analyses by race and SES without specific group interactions
# These examples demonstrate the flexibility of the EstHR_new function to explore
# a wide range of interactions in the model to gain insights into survival disparities.

#Table II. Effect of HDI in each category of Stage 
#=================================================
#Meddium HDI - Ref high HDI within each stage category 
EstHR(c("as.factor(ylost)Group 1 (lowest SES)"),Mod1_df5)
#Low HDI - Ref high HDI within each stage category 
EstHR(c("as.factor(ylost)Group 3"),Mod1_df5)
#
#Meddium HDI and Late stage
EstHR(c("as.factor(ylost)Group 1 (lowest SES)","as.factor(race)NHB:as.factor(ylost)Group 1 (lowest SES)"),Mod1_df5)
EstHR(c("as.factor(ylost)Group 1 (lowest SES)","as.factor(race)HIS:as.factor(ylost)Group 1 (lowest SES)"),Mod1_df5)
EstHR(c("as.factor(ylost)Group 1 (lowest SES)","as.factor(race)API:as.factor(ylost)Group 1 (lowest SES)"),Mod1_df5)
#EstHR(c("as.factor(hdi)2","as.factor(hdi)2:as.factor(figo1)2"),Mod1)

#Low HDI and Late stage
#EstHR(c("as.factor(hdi)3","as.factor(hdi)3:as.factor(figo1)2"),Mod1)
EstHR(c("as.factor(ylost)Group 3","as.factor(race)NHB:as.factor(ylost)Group 3"),Mod1_df5)
EstHR(c("as.factor(ylost)Group 3","as.factor(race)HIS:as.factor(ylost)Group 3"),Mod1_df5)
EstHR(c("as.factor(ylost)Group 3","as.factor(race)API:as.factor(ylost)Group 3"),Mod1_df5)
#
```


*Measures of addictive interaction*

Details on the methods can be obtained elsewhere [Kalilani and Atashili 2006]("https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1475799/")

To evaluate the interaction between deprivation (SES) and race/ethnicity, we first fit a model that includes the effects of SES and race, followed by their interaction term (multiplication between SES and race) to obtain the coefficients. The formula is represented as follows:

`λ(t,x) = exp( βses + βrace + (βses * βrace) λ0(t)`

We created a list to store all coefficients (`summary(mod`). Another list was also created to contain the covariance matrix (`cov.matrix`). In our example, we are interested in evaluating an interaction from a public health perspective. Hence, one might be interested in examining the effects of low and medium SES compared to high SES, as well as the effects of race compared to NHW. The reference categories were set as high SES and NHW. Below is the general equation, simplified to describe the effects of SES and race, along with the interaction coefficients. Now, we can estimate the Hazard Ratios (HRs).

<!-- We Fitted a Generalized Linear Model (GLM) with a Poisson distribution -->

<!-- `mod <- glm(MyD ~ as.factor(race) * as.factor(ylost) + offset(log(risktime)),family = "poisson", data = df5)` -->

<!-- `summary(mod)` -->

Then, we simplify the equation (Details in Supplement):

<!-- <div style="font-size:75%;"> -->

<!-- Low SES and NHB race, -->
<!-- $$ -->
<!-- \text{HR(Low/NHB)} = \exp(\beta_{\text{a1}}(\text{Low}) + \beta_{\text{a3}}(\text{NHB}) + \beta_{\text{a5}}(\text{Low} \times \text{NHB})) -->
<!-- $$ -->

<!-- Low SES and HIS race, -->
<!-- $$ -->
<!-- \text{HR(Low/HIS)} = \exp(\beta_{\text{a1}}(\text{Low}) + \beta_{\text{a3}}(\text{HIS}) + \beta_{\text{a5}}(\text{Low} \times \text{HIS})) -->
<!-- $$ -->

<!-- Low SES and API race, -->
<!-- $$ -->
<!-- \text{HR(Low/API)} = \exp(\beta_{\text{a1}}(\text{Low}) + \beta_{\text{a3}}(\text{API}) + \beta_{\text{a5}}(\text{Low} \times \text{API})) -->
<!-- $$ -->

<!-- </div> -->
<!-- # -->

The Table 2 presents hazard ratios (HRs) along with their 95% confidence intervals (CIs), examining the interaction effect between socioeconomic status (SES; categorized as High, Medium, Low) and race/ethnicity (NHW, API, NHB, HIS) on malignant breast cancer mortality. 

The effects of deprivation (SES) on race and ethnicity are challenging to interpret. However, no significant heterogeneity in the HRs was observed. One might suggest that patients diagnosed with malignant breast cancer within the racial and ethnic groups in the midle and low SES have a higher risk of dying,  independent of race and ethnicity group. Same can't be seen for the highest SES where the results are heterogeneous.

Another way to interpret is that these tables suggest differences in hazard ratios, with NHB consistently exhibiting higher HRs compared to NHW (the reference group), regardless of SES. API and HIS experience lower HRs at higher SES levels but show an increased relative risk as SES decreases.



```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Load necessary library
library(readr)

# Read dataset
df <- read_csv("C:/Users/miran/Desktop/Survival/Specialized/data/seer17_breast.csv")

# Rename variables for readability
names(df) <- c("age1", "year_follow_up", "race", "stage", "subtype", "er", "tract", 
               "registry_tract", "census2010", "urban_area", "poverty", "ylost", "sex", 
               "status", "year_rec", "end_calc", "time")

# Filter dataset for specific races
df1 <- subset(df, df$race %in% c("Non-Hispanic White", "Non-Hispanic Black", 
                                 "Non-Hispanic Asian or Pacific Islander", "Hispanic (All Races)"))

# Recode race
df1$race_lab <- ifelse(df1$race == "Non-Hispanic White", "NHW", 
                       ifelse(df1$race == "Non-Hispanic Black", "NHB", 
                              ifelse(df1$race == "Non-Hispanic Asian or Pacific Islander", "API", "HIS")))

# Recode age based on categories
age_mapping <- setNames(c(37.5, 42.5, 47.5, 52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 82.5), 
                        c("35-39 years", "40-44 years", "45-49 years", "50-54 years",
                          "55-59 years", "60-64 years", "65-69 years", "70-74 years", 
                          "75-79 years", "80-84 years"))
df1$age <- unname(age_mapping[df1$age1])

# Recode status
df1$status_lab <- ifelse(df1$status == "Alive", 1, 2)

# Select and rename specific columns
df4 <- df1[c("year_follow_up", "age", "race_lab", "status_lab", "time", "stage", 
             "er", "subtype", "poverty", "ylost")]
names(df4)[3:4] <- c("race", "status")

# Recode status to binary
df4$status1 <- ifelse(df4$status == 1, 0, 1)

# Recode time to months
df4$time1 <- df4$time

# Subset data for specific subtypes and stages
df4a <- subset(df4, df4$subtype %in% c("HR+/HER2-", "HR-/HER2-", "HR-/HER2+", "HR+/HER2+"))
df4b <- subset(df4a, df4a$stage %in% c("Localized", "Regional", "Distant"))
df4c <- subset(df4b, df4b$er %in% c("Positive", "Negative"))
df4d <- subset(df4c, df4c$poverty != "Blank(s)")
df4e <- subset(df4d, df4d$ylost != "Blank(s)")

# Prepare final dataset for modeling
df5 <- df4e[c(3,6,7,8,9,10,11,12)]
names(df5)[7:8] <- c("MyD", "risktime")

# Relevel factors to specify the reference levels
df5$race <- relevel(as.factor(df5$race), "NHW")
df5$ylost <- relevel(as.factor(df5$ylost), "Group 5 (highest SES)")

# Fit a Generalized Linear Model (GLM) with a Poisson distribution
Mod1_df5 <- glm(MyD ~ as.factor(race) * as.factor(ylost) + offset(log(risktime)), 
                family = "poisson", data = df5)
# Summarize the fitted model
#summary(Mod1_df5)

```

**Note that further analysis should include non-proportional baseline hazard terms (`rcs`)**


```{r, message=FALSE, warning=FALSE, echo=FALSE}

library(knitr)
# Install packages if you haven't already
#install.packages("dplyr")
#install.packages("knitr")
#install.packages("kableExtra")

# Load the packages
library(dplyr)
library(knitr)
library(kableExtra)

# Create the data frame
data <- data.frame(
  Race = c("NHW", "API", "NHB", "HIS"),
  `"High SES"` = c("Ref", "0.74", "1.59", "0.91"),
  `"H SES"` = c("(Ref)", "(0.86-0.97)", "(1.48-1.71)", "(0.86-0.97)"),
  `"Medium SES"` = c("1.55", "1.34", "2.02", "1.18"),
  `"M SES"` = c("(1.50-1.59)", "(1.27-1.42)", "(1.92-2.13)", "(1.09-1.27)"),
  `"Low SES"` = c("2.11", "1.42", "2.69", "1.69"),
  `"L SES"` = c("(2.04-2.17)", "(1.26-1.59)", "(2.59-2.79)", "(1.61-1.78)")
)


# Create the data frame
# Create the data frame with corrected variable names directly
data <- data.frame(
  `Race` = c("NHW", "API", "NHB", "HIS"),
  `High SES` = c("Ref", "0.74", "1.59", "0.91"),
  `95%CI High` = c(" ", "(0.86-0.97)", "(1.48-1.71)", "(0.86-0.97)"),
  `Medium SES` = c("1.55", "1.34", "2.02", "1.18"),
  `95%CI Medium` = c("(1.50-1.59)", "(1.27-1.42)", "(1.92-2.13)", "(1.09-1.27)"),
  `Low SES` = c("2.11", "1.42", "2.69", "1.69"),
  `95%CI Low` = c("(2.04-2.17)", "(1.26-1.59)", "(2.59-2.79)", "(1.61-1.78)")
)

# Assuming the required packages are already installed and loaded
# Now, execute your code for creating the kable styled table
kable(data, caption = "Table 2. HRs, 95%CI, and the models with the interaction effect between deprivation (SES) and race/ethnicity.", 
      align = c("l", rep("c", 6))) %>%  # Align columns: left for the first column, center for the rest
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE, font_size = 12) %>%
  column_spec(1, bold = TRUE)  # Make the first column bold

```


By rearranging the coefficients, we can observe the effect of race/ethnicity within each deprivation group (SES). It can be seen that patients  across all races and ethnicities experience higher rates in the lower and medium deprivation groups compared to the highest deprivation group.




```{r, message=FALSE, warning=FALSE, echo=FALSE}

# Create the data frame with corrected values and direct assignment
data2 <- data.frame(
  Race = c("NHW", "API", "NHB", "HIS"),  # Correct usage of c() for vector
  `High SES` = c("ref", "ref", "ref", "ref"),  # Reference rates for comparison
  `95%CI High` = c("", "", "", ""),  # Empty strings for CI of reference rates
  `Medium SES` = c("1.55", "1.59", "1.26", "1.46"),  # Corrected to use c() for vector
  `95%CI Medium` = c("(1.50-1.59)", "(1.45-1.73)", "(1.16-1.37)", "(1.35-1.59)"),
  `Low SES` = c("2.11", "1.91", "1.68", "1.85"),
  `95%CI Low` = c("(2.04-2.17)", "(1.69-2.16)", "(1.56-1.81)", "(1.71-1.99)")
)

kable(data2, caption = "Table 3. HRs and 95% CIs for Medium and Low Deprivation (SES), referenced to High SES, across races.", 
      align = c("l", rep("c", 6))) %>%  # Align columns: left for the first column, center for the rest
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE, font_size = 12) %>%
  column_spec(1, bold = TRUE)  # Make the first column bold

```






## References

Breast cancer incidence and survival in Scotland by socio-economic deprivation and tumour subtype [Ref]("https://pubmed.ncbi.nlm.nih.gov/35648299/")

On Estimation in Relative Survival[Ref]("https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1541-0420.2011.01640.x")

Expected Survival Life Tables, Released March 2024[Ref]("https://seer.cancer.gov/expsurvival/"), for detaisl 

Geographical, racial and socio-economic variation in life expectancy in the US and their impact on cancer relative survival[Ref]("https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0201034"). 

[Ref]("https://pubmed.ncbi.nlm.nih.gov/35648299/")

Rothman KJ, Greenland S, Lash TL. Modern Epidemiology. Philadephia: Wolters Kluwer/Lippincott Wolliams & Wilkins, 2008.

Kalilani and Atashili 2006. Measuring additive interaction using odds ratios. [Ref]("https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1475799/")
