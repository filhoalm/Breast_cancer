---
toc: true
title: "Simple Imputation -  malignant breast cancer by ER using SEER 22, 2000â€“2020"
author: "AMF"
format: html
editor: visual
date: "January 31, 2024"
date-modified: last-modified
---



#### Data Source
National Cancer Institute. Surveillance, Epidemiology, and End Results (SEER22) Program Populations (2000-2020). Available at: [www.seer.cancer.gov/popdata](https://www.seer.cancer.gov/popdata). Released November 2023. National Cancer Institute, DCCPS, Surveillance Research Program.

#### Morphology
#### Infiltrating Ductal Carcinoma (IDC)
:::{.callout-note}
-   **8500/3**: Infiltrating duct carcinoma, NOS'
-   **8523/3**: Infiltrating duct mixed with other types of carcinoma'
:::

ER Status Recode for Breast Cancer (1990+): 'Positive', 'Negative', 'Borderline/Unknown', 'Recode not available


#### load required libraries
```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Load necessary library for data fetching
library(readr)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(Rcan)
library(readr)
library(ggplot2)
library(gridExtra)
library(readr)
library(ggplot2)
library(dplyr)
library(gridExtra)

```

##### Importing Encrypted SEER12 Data Files from GitHub Repository

Discuss the process involved in accessing locked data files from SEER12 that have been stored on GitHub.

```{r, message=FALSE, warning=FALSE}
# Read the dataset from the provided URL
url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/data/seer22_race_er.csv"
df <- read_csv(url)

```

```{r, message=FALSE, warning=FALSE, echo=FALSE}


#| label: fig1
#| fig-cap: "Figure 1. Trends in the prevalence of estrogen receptor (ER) status for invasive female breast cancer cases in the United States are depicted in two parts. Figure A presents the annual proportions of breast cancer cases with unspecified ER status. Figure B details the yearly proportions of breast cancers with confirmed ER status that are ER-negative."
#| 
names(df)<-c("age","year", "race", "er", "rate", "cases", "py")
df$year <- as.numeric(df$year) + 1999
# Check the result
df<-subset(df, df$year > 2000)
# Recode the race and stage values
df$race <- factor(df$race, levels = c(0, 1, 2, 3, 4, 5),
                  labels = c("NHW", "NHB", "AIAN", "API", "HIS", "Unknown"))
df$er[df$er==3]<-2
df$er <- factor(df$er, levels = c(0, 1, 2),
                labels = c("Positive", "Negative", "Unknown"))

# Now, aggregate both cases and py by the new age groups as well as by race and subtype
#data <- aggregate(cbind(cases, py) ~ race + year + er, data=df, sum)
data <- aggregate(cbind(cases, py) ~ year + er, data=df, sum)
# estimate the total number of er cases by year and race
#estimated_cases <- aggregate(data$cases, by = list(data$race, data$year), sum)
estimated_cases <- aggregate(data$cases, by = list(data$year), sum)
#names(estimated_cases)<-c("race", "year", "total")
names(estimated_cases)<-c("year", "total")
#df1<-merge(data, estimated_cases, by=c("race", "year"))
df1<-merge(data, estimated_cases, by=c("year"))
df1$prop<-(df1$cases / df1$total)

#Create a line plot in Lance style

df2<-subset(df1, df1$er == "Unknown")

a<-ggplot(df2, aes(x = year, y = prop, group = 1)) +
  geom_line(color = "black", size = 1) +  # Change line color and size as needed
  ylim(0,0.5) +
  geom_point(color = "black", size = 2) + # Add points and customize their color and size as needed
  theme_minimal() +
  labs(
    title = "Year at diagnosis",
    x = "Year",
    y = "% of Unknown ER"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5), # Center the plot title
    text = element_text(size = 12),
    aspect.ratio = 2.5 # Example aspect ratio, adjust as needed
  )


######

## Proportion Age at diagnosis

df2a<-subset(df, df$year>=2010 & df$year <=2020) #1991 represents 1992-2020

# Sum the number of ER cases by year and age
dfb <- df2a %>%
  group_by(age) %>%
  summarise(total_cases = sum(cases), .groups = 'drop') # Sum of 'cases' within each 'year' and 'age' group

# Sum the number of ER cases by year and age
dfc <- df2a %>%
  group_by(age, er) %>%
  summarise(total_cases = sum(cases), .groups = 'drop') # Sum of 'cases' within each 'year' and 'age' group

df4a<-merge(dfc, dfb, by=c("age"))

# Proportion of unknown
df4a$prop<-(df4a$total_cases.x / df4a$total_cases.y)

# Filter for 'Unknown' ER only
df_age <- df4a %>%
  filter(er == "Negative")

df3<-subset(df_age, df_age$age >=25)

# Create a line plot in Lance style
b<-ggplot(df3, aes(x = age, y = prop, group = 1)) +
  geom_line(color = "black", size = 1) +  # Change line color and size as needed
  ylim(0,0.5) +
  xlim(20,80) + # This will set X-axis from 25 to 80
  geom_point(color = "black", size = 2) + # Add points and customize their color and size as needed
  theme_minimal() +
  labs(
    title = "Age at diagnosis",
    x = "Age",
    y = "% ER Negative"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5),
    text = element_text(size = 12),
    aspect.ratio = 2.5 # Set a specific aspect ratio to make the plot 'skinny'
  )


grid.arrange(a,b,
             ncol=2,
             top = grid::textGrob('', gp=grid::gpar(fontsize=5)))


```
Figure A presents the annual proportions of breast cancer cases with unknown ER status. Figure B details the yearly proportions of breast cancers with ER-negative status."


#### Proportion of unknown by ER status and breast cancer subtype.

```{r, message=FALSE, warning=FALSE, echo=FALSE}

library(readr)
library(ggplot2)
library(gridExtra)

# Read the dataset from the provided URL
url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/data/seer22_race_er.csv"
df <- read_csv(url)
names(df)<-c("age","year", "race", "er", "rate", "cases", "py")
df$year <- as.numeric(df$year) + 1999
# Check the result
df<-subset(df, df$year > 2000)
# Recode the race and stage values
df$race <- factor(df$race, levels = c(0, 1, 2, 3, 4, 5),
                    labels = c("NHW", "NHB", "AIAN", "API", "HIS", "Unknown"))
df$er[df$er==3]<-2
df$er <- factor(df$er, levels = c(0, 1, 2),
                  labels = c("Positive", "Negative", "Unknown"))

# Now, aggregate both cases and py by the new age groups as well as by race and subtype
data <- aggregate(cbind(cases, py) ~ race + year + er, data=df, sum)
# estimate the total number of er cases by year and race
estimated_cases <- aggregate(data$cases, by = list(data$race, data$year), sum)
names(estimated_cases)<-c("race", "year", "total")
df1<-merge(data, estimated_cases, by=c("race", "year"))
df1$prop<-(df1$cases / df1$total)

#Create a line plot in Lance style

df2<-subset(df1, df1$er == "Unknown")
df3<-subset(df2, df2$race== "NHW"|df2$race=="NHB"|df2$race=="API"|df2$race=="HIS")

a1<-ggplot(df3, aes(x = year, y = prop, group = race, color = race)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  ylim(0, 0.5) +
  scale_color_manual(values = c("NHW" = "darkblue", "NHB" = "darkred", "API" = "purple", "HIS" = "darkorange")) +
  labs(
    title = "ER",
    x = "Year",
    y = "% of Unknown ER"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    text = element_text(size = 12),
    aspect.ratio = 2.5,
    legend.position = "bottom",
    legend.text = element_text(size = 5), # This will reduce the legend text size
    legend.title = element_text(size = 6), # This will reduce the legend title size
    legend.key.size = unit(0.5, "cm") # This will reduce the size of the colored keys
  )



# Read the dataset from the provided URL
url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/data/seer22_race_subtype.csv"
df <- read_csv(url)

names(df)<-c("age", "year", "race", "subtype", "rate", "cases", "py")
df$year <- as.numeric(df$year) + 1999

# Check the result
df<-subset(df, df$year > 2000)
# Recode the race and stage values
df$race <- factor(df$race, levels = c(0, 1, 2, 3, 4, 5),
                  labels = c("NHW", "NHB", "AIAN", "API", "HIS", "Unknown"))
#
df$subtype[df$subtype==5]<-4
df$subtype <- factor(df$subtype, levels = c(0, 1, 2, 3, 4),
                labels = c("HR+/HER2+", "HR-/HER2+", "HR+/HER2-", "HR-/HER2-", "Unknown"))

# Now, aggregate both cases and py by the new age groups as well as by race and subtype
data <- aggregate(cbind(cases, py) ~ race + year + subtype, data=df, sum)
# estimate the total number of er cases by year and race
estimated_cases <- aggregate(data$cases, by = list(data$race, data$year), sum)
names(estimated_cases)<-c("race", "year", "total")
df1<-merge(data, estimated_cases, by=c("race", "year"))
df1$prop<-(df1$cases / df1$total)

#Create a line plot in Lance style

df2<-subset(df1, df1$year >=2000 & df1$subtype == "Unknown")
df3<-subset(df2, df2$race== "NHW"|df2$race=="NHB"|df2$race=="API"|df2$race=="HIS")

b1<-ggplot(df3, aes(x = year, y = prop, group = race, color = race)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  ylim(0, 0.5) +
  scale_color_manual(values = c("NHW" = "darkblue", "NHB" = "darkred", "API" = "purple", "HIS" = "darkorange")) +
  labs(
    title = "Subtype",
    x = "Year",
    y = "% of Unknown Subtype"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    text = element_text(size = 12),
    aspect.ratio = 2.5,
    legend.position = "bottom",
    legend.text = element_text(size = 5), # This will reduce the legend text size
    legend.title = element_text(size = 6), # This will reduce the legend title size
    legend.key.size = unit(0.5, "cm") # This will reduce the size of the colored keys
  )

###
grid.arrange(a1,b1,
             ncol=2,
             top = grid::textGrob('', gp=grid::gpar(fontsize=5)))


```



##### Simple imputation for malignant breast cancer by ER

A simple imputation method to correct the rates of ER-positive and ER-negative was based on the method proposed by[Anderson at al., 2011](https://pubmed.ncbi.nlm.nih.gov/21753181/)

in brief:



:::{.callout-tip}


We developed a simple imputation model to correct the apparent rates of ER-positive and ER-negative breast cancer for missing ER data. For each age `a` and year `t`, we partitioned the observed total number of incident breast cancers $0^I_{at}$ according to ER status. Hence

$$
I^I_{at} = P^0_{at} + N^0_{at} + U^0_{at} \tag{1}
$$

in which $P^0_{at}$, $N^0_{at}$, and $U^0_{at}$ are the observed ER-positive, ER-negative, and unknown counts, respectively. Prior studies have analyzed $P^0_{at}$ and $N^0_{at}$, but if $U^0_{at}$ varies by either `a` or `t` these results may be biased. Our imputation method estimates the unobserved complete data

$$
I^0_{at} = P^C_{at} + N^C_{at} \tag{2}
$$

in which $P^C_{at}$ and $N^C_{at}$ are the true numbers of ER-positive and ER-negative counts, respectively.

Our model assumes that unknown ER status is missing at random within a single year of age `a` and calendar year `t` of diagnosis. Under this model, the observed probability $\pi_{at} = \dfrac{P^0_{at}}{P^0_{at} + N^0_{at}}$ on the basis of patients for whom we have complete information is an unbiased estimator of the true probability at the population level that an incident breast cancer diagnosed among women age `a` and calendar year `t` is ER positive. The equations

$$
P^C_{at} = \hat{\pi}_{at} \times I^0_{at} \tag{3}
$$
$$
N^C_{at} = (1 - \hat{\pi}_{at}) \times I^0_{at} \tag{4}
$$

provide unbiased estimators of the true numbers of ER-positive and ER-negative breast cancers in the population.
:::



```{r, message=FALSE, warning=FALSE, echo=FALSE}
# 
# library(readr)
# library(ggplot2)
# library(gridExtra)
# 
# library(readr)
# library(ggplot2)
# library(dplyr)
# library(gridExtra)
# 
# # Read the dataset from the provided URL
# url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/data/seer22_race_er.csv"
# df <- read_csv(url)
# names(df)<-c("age", "year", "race","er", "rate", "cases", "py")
# df$er[df$er==3]<-2 
# 
# # Aggregate cases by age, year, and er
# df_a <- df %>%
#   group_by(age, year, er, py) %>%
#   summarise(total_cases = sum(cases), .groups = 'drop')
# 
# # Recode the race and stage values
# df_a$er <- factor(df_a$er, levels = c(0, 1, 2),
#                   labels = c("Positive", "Negative", "Unknown"))
# 
# # Filter out rows with "Year of diagnosis" in the 'year' column and convert to numeric
# #df <- subset(df, df$year != "Year of diagnosis")
# df_a$year <- as.numeric(df_a$year) + 1999
# df1<-df_a
# df2<-subset(df1, df1$age >=40 & df1$age <=84)
# df_a <- df %>%
#   group_by(age, year, er) %>%
#   summarise(total_cases = sum(cases), .groups = 'drop')
# 
# # Display the first few rows of the data to understand what we are working with
# # Group data by age and year to calculate observed counts and probabilities
# 
# df2_summary <- df2 %>%
#   group_by(age, year) %>%
#   summarise(
#     total_positive = sum(total_cases[er == "Positive"]),
#     total_negative = sum(total_cases[er == "Negative"]),
#     total_known = total_positive + total_negative,
#     total_cases = sum(total_cases)
#   ) %>%
#   ungroup()
# 
# # Calculate the observed probabilities for known ER status
# df2_summary <- df2_summary %>%
#   mutate(
#     Observed_Probability_Positive = total_positive / total_known,
#     Observed_Probability_Negative = total_negative / total_known
#   )
# 
# # Estimate the true counts for ER-positive and ER-negative cases using the observed probabilities
# df2_summary <- df2_summary %>%
#   mutate(
#     Estimated_Positive = Observed_Probability_Positive * total_cases,
#     Estimated_Negative = Observed_Probability_Negative * total_cases
#   )
# 
# # Display the resulting estimates
# df2_summary$Estimated_Positive<-round(df2_summary$Estimated_Positive, 0)
# df2_summary$Estimated_Negative<-round(df2_summary$Estimated_Negative, 0)
# 
# # You may want to save the updated summary dataframe with estimations
# #write.csv(df2_summary, 'df2_summary_with_estimations.csv', row.names = FALSE)
# 
# dat<-subset(df2_summary, df2_summary$year >= 2010)
# 
# 
# # Create a long format
# #df2_summary$Estimated_Positive<-as.numeric(df2_summary$Estimated_Positive)
# #df2_summary$Estimated_Negative<-as.numeric(df2_summary$Estimated_Negative)
# 
# 
# 
# # Population
# df <- read_csv("C:/Users/filhoam/Desktop/Breast/survival_article/data/seer22_py.csv")
# head(df)
# 
# names(df)<-c("year", "age", "rate", "cases", "py")
# df$year <- as.numeric(df$year) + 1999
# df2<-subset(df, df$age >=40 & df$age <=84)
# df2<-subset(df, df$age >=40 & df$age <=84 & df$year >=2000)
# head(df2)
# 
# #
# df4<-merge(dat, df2, by=c("year", "age"))
# 
# 
# #check rates
# names(df4)
# df4$rate2<-(df4$total_cases / df4$py)*100000
# # create rate objects
# 
# df5<-df4[c(1,2,3,4,9,10,13)]
# head(df5)
# 
# 
# # 3 = total_positive
# # 4 = total_negative
# # 5 = Estimated_Positive
# # 6 = Estimated_Negative
# 
# df6<-df5[c(1,2,6,7)]
# 
# # Reshape the data
# # Reshape the data
# reshaped_data <- reshape(df6,
#                          idvar = "age",
#                          timevar = "year", # This is the column you want to convert
#                          direction = "wide")
# 
# head(reshaped_data)
# data<-reshaped_data[c(-1)]
# #names(reshaped_data)[names(reshaped_data) %in% variables_to_remove] <- paste("var", seq_along(variables_to_remove))
# 
# 
# # Create a dataframe with a single row and the same number of columns as df2
# summary_info <- data.frame(matrix(NA, ncol = length(data), nrow = 5))
# colnames(summary_info) <- colnames(data)
# 
# # Fill in the summary information
# summary_info[1, 1] <- "Title: Breast Cancer"
# summary_info[2, 1] <- "Description: Estimated_negative"
# summary_info[3, 1] <- "Start Year: 2010"               # Enter the actual Start Year if available
# summary_info[4, 1] <- "Start Age: 40"                  # Enter the actual Start Age if available
# summary_info[5, 1] <- "Interval (Years): 1"            # Enter the actual interval if available
# 
# # Combine the summary information with the data
# combined <- rbind(summary_info, data)
# 
# # View the combined data
# head(combined)
# #write.csv(combined, "C:/Users/filhoam/Desktop/Breast/survival_article/rates/estimated_negative.csv", row.names = FALSE)
# 
# ################################
# 
# my_path <- "C:/Users/filhoam/Desktop/NCI/APC/SIP 2022/SIP 2022/RCode/All/"
# setwd(my_path)  
# functions <- list.files(pattern = "*.R")       # Get all file names
# apc<- lapply(functions, source)  # Read all data frames
# 
# library(ggpubr)
# # Note: You will need to install all packages prior to loading them.
# packages <- c("dplyr",
#               "ggplot2",
#               "ggpubr",
#               "ggthemes",
#               "gridExtra",
#               "hrbrthemes",
#               "patchwork",
#               "Matrix",
#               "pracma",
#               "scales",
#               "RColorBrewer")
# 
# # Load
# lapply(packages, require, character.only = TRUE)
# 
# #```{r setup1, echo=FALSE}
# my_path <- "C:/Users/filhoam/Desktop/NCI/Kidney/DATA/"
# setwd(my_path)  
# dat1 <- csv2rates('C:/Users/filhoam/Desktop/Breast/survival_article/rates/observed_positive.csv')
# dat2 <- csv2rates('C:/Users/filhoam/Desktop/Breast/survival_article/rates/observed_negative.csv')
# dat3 <- csv2rates('C:/Users/filhoam/Desktop/Breast/survival_article/rates/estimated_positive.csv')
# dat4 <- csv2rates('C:/Users/filhoam/Desktop/Breast/survival_article/rates/estimated_negative.csv')
# 
# # To visualize all objects
# # Lets create a lexis diagram
# a<-lexis(df1,legend.title.size=1)
# b<-lexis(df2,legend.title.size=1)
# c<-lexis(df3,legend.title.size=1)
# d<-lexis(df4,legend.title.size=1)
# 
# #wrap_plots(list(a,b), 1, 2)
# grid.arrange(a,b,c,d, ncol=2,nrow=2, top = "Kidney cancer")
# 
# #```
# #```{r setup2, echo=FALSE}
# M1 <- apc2fit(dat1)
# M2 <- apc2fit(dat2)
# M3 <- apc2fit(dat3)
# M4 <- apc2fit(dat4)
# 
# # P curve function can Plot a selected output from an age-period-cohort model. 
# # To update size of labels and change x,y labels
# 
# M1$FittedTemporalTrends
# 
# m1<-as.data.frame(M1$FittedTemporalTrends)
# m1$index<-"observed_positive"
# 
# m2<-as.data.frame(M2$FittedTemporalTrends)
# m2$index<-"observed_negative"
# 
# m3<-as.data.frame(M3$FittedTemporalTrends)
# m3$index<-"estimated_positive"
# 
# m4<-as.data.frame(M4$FittedTemporalTrends)
# m4$index<-"estimated_negative"
# 
# 
# dat5<-rbind(m1, m2, m3, m4)
# 
# #write.csv(dat5, "C:/Users/filhoam/Desktop/Breast/survival_article/rates/fitted_temporal_er.csv", row.names = FALSE)
# 
# 
# ggplot(dat5, aes(x = Period, y = Rate, group = index, color = index)) +
#   geom_line(aes(linetype=index, color=index)) +
#   geom_point(aes(shape = index)) + # Point size
#   xlim(2000,2020)+
#   #scale_color_manual(values = c("darkblue", "darkblue", "darkred", "darkred")) + # Replace with desired colors
#   theme_minimal() + # Lance style typically implies a minimalistic theme
#   labs(
#     title = "",
#     x = "Year of diagnosis",
#     y = "Crude rates per 100,000"
#   ) +
#   theme(
#     plot.title = element_text(hjust = 0.5), # Center the plot title
#     text = element_text(size = 12), # Change text size as needed
#     aspect.ratio = 2.5 # Adjust this value to make the figure skinnier or wider
#   )
# 


```


```{r, message=FALSE, warning=FALSE, echo=FALSE}

# Read the dataset from the provided URL
# url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/rates/fitted_temporal_er.csv"
# dat5 <- read_csv(url)
# 
# ggplot(dat5, aes(x = Period, y = Rate, group = index, color = index)) +
#   geom_line(aes(linetype=index, color=index)) +
#   geom_point(aes(shape = index)) + # Point size
#   xlim(2000,2020)+
#   scale_color_manual(values = c("darkblue", "darkgreen", "darkred", "purple")) + # Replace with desired colors
#   theme_minimal() + # Lance style typically implies a minimalistic theme
#   labs(
#     title = "",
#     x = "Year of diagnosis",
#     y = "Crude rates per 100,000"
#   ) +
#   theme(
#     plot.title = element_text(hjust = 0.5), # Center the plot title
#     text = element_text(size = 12), # Change text size as needed
#     aspect.ratio = 1.5 # Adjust this value to make the figure skinnier or wider
#   )

```




```{r, message=FALSE, warning=FALSE, echo=FALSE}
# 
# # Read the dataset from the provided URL
# url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/data/seer22_race_er.csv"
# 
# #df <- read_csv("C:/Users/filhoam/Desktop/Breast/survival_article/data/seer22_er.csv")
# #View(df)
# 
# df <- read_csv(url)
# names(df)<-c("age", "year", "race","er", "rate", "cases", "py")
# df$er[df$er==3]<-2 
# 
# # Aggregate cases by age, year, and er
# df_a <- df %>%
#   group_by(age, year, er, py) %>%
#   summarise(total_cases = sum(cases), .groups = 'drop')
# 
# # Recode the race and stage values
# df_a$er <- factor(df_a$er, levels = c(0, 1, 2),
#                   labels = c("Positive", "Negative", "Unknown"))
# 
# # Filter out rows with "Year of diagnosis" in the 'year' column and convert to numeric
# #df <- subset(df, df$year != "Year of diagnosis")
# df_a$year <- as.numeric(df_a$year) + 1999
# df1<-df_a
# df2<-subset(df1, df1$age >=40 & df1$age <=84)
# df_a <- df %>%
#   group_by(age, year, er) %>%
#   summarise(total_cases = sum(cases), .groups = 'drop')
# 
# # Display the first few rows of the data to understand what we are working with
# # Group data by age and year to calculate observed counts and probabilities
# 
# df2_summary <- df2 %>%
#   group_by(age, year) %>%
#   summarise(
#     total_positive = sum(total_cases[er == "Positive"]),
#     total_negative = sum(total_cases[er == "Negative"]),
#     total_known = total_positive + total_negative,
#     total_cases = sum(total_cases)
#   ) %>%
#   ungroup()
# 
# # Calculate the observed probabilities for known ER status
# df2_summary <- df2_summary %>%
#   mutate(
#     Observed_Probability_Positive = total_positive / total_known,
#     Observed_Probability_Negative = total_negative / total_known
#   )
# 
# # Estimate the true counts for ER-positive and ER-negative cases using the observed probabilities
# df2_summary <- df2_summary %>%
#   mutate(
#     Estimated_Positive = Observed_Probability_Positive * total_cases,
#     Estimated_Negative = Observed_Probability_Negative * total_cases
#   )
# 
# # Display the resulting estimates
# df2_summary$Estimated_Positive<-round(df2_summary$Estimated_Positive, 0)
# df2_summary$Estimated_Negative<-round(df2_summary$Estimated_Negative, 0)
# 
# # You may want to save the updated summary dataframe with estimations
# #write.csv(df2_summary, 'df2_summary_with_estimations.csv', row.names = FALSE)
# 
# dat<-subset(df2_summary, df2_summary$year >= 2010)
# 
# 
# # Create a long format
# #df2_summary$Estimated_Positive<-as.numeric(df2_summary$Estimated_Positive)
# #df2_summary$Estimated_Negative<-as.numeric(df2_summary$Estimated_Negative)
# 
# 
# 
# # Population
# 
# url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/data/seer22_py.csv"
# df <- read_csv(url)
# #df <- read_csv("C:/Users/filhoam/Desktop/Breast/survival_article/data/seer22_py.csv")
# #head(df)
# 
# names(df)<-c("year", "age", "rate", "cases", "py")
# df$year <- as.numeric(df$year) + 1999
# df2<-subset(df, df$age >=40 & df$age <=84)
# df2<-subset(df, df$age >=40 & df$age <=84 & df$year >=2000)
# head(df2)
# 
# #
# df4<-merge(dat, df2, by=c("year", "age"))
# 
# 
# #check rates
# names(df4)
# df4$rate2<-(df4$total_cases / df4$py)*100000
# # create rate objects
# 
# df5<-df4[c(1,2,3,4,9,10,13)]
# head(df5)
# 
# # Reshape from wide to long format
# df_long <- melt(df5, id.vars = c("year", "age", "py"), 
#                 measure.vars = c("total_positive", "total_negative", "Estimated_Positive", "Estimated_Negative"), 
#                 variable.name = "estimate_type", value.name = "value")
# 
# # View the transformed dataframe
# head(df_long)
# unique(df_long$age)
# 
# df_long$age2[df_long$age <=44]<-9
# df_long$age2[df_long$age >=45 & df_long$age<=49]<-10
# df_long$age2[df_long$age >=50 & df_long$age<=54]<-11
# df_long$age2[df_long$age >=55 & df_long$age<=59]<-12
# df_long$age2[df_long$age >=60 & df_long$age<=64]<-13
# df_long$age2[df_long$age >=65 & df_long$age<=69]<-14
# df_long$age2[df_long$age >=70 & df_long$age<=74]<-15
# df_long$age2[df_long$age >=75 & df_long$age<=79]<-16
# df_long$age2[df_long$age >=80 & df_long$age<=84]<-17
#   
# names(df_long)<-c("year","age", "py" ,"index", "cases", "age2")
# 
# # Aggregate cases by age, year, and er
# df_long_cases <- df_long %>%
#   group_by(age2, year, index) %>%
#   summarise(cases = sum(cases), .groups = 'drop')
# 
# # Aggregate cases by age, year, and er
# df_long_py <- df_long %>%
#   group_by(age2, year, index) %>%
#   summarise(py = sum(py), .groups = 'drop')
# 
# 
# 
# df7<-merge(df_long_cases, df_long_py, by=c("year", "age2", "index"))
# names(df7)
# 
# 
# 
# # you import your data from csv file using read.csv:
# # mydata <-  read.csv("mydata.csv", sep=",")
# 
# # Estimated Annual Percentage Change (EAPC) base on ASR.
# 
# names(df7)<-c("year","age", "index", "cases", "py")
# 
# df_asr <-csu_asr(df7, 
#           "age", "cases", "py",
#           group_by = c("index","year"),
#           #first_age = 9,
#           #last_age = 17,
#           var_age_group = c("index"))
# 
# # result <- 
# #   csu_eapc(df_asr,
# #            "asr", "year",
# #            group_by=c("registry", "registry_label", "sex", "ethnic" )
# #   )
# 
# 
# # you can export your result as csv file using write.csv:
# # write.csv(result, file="result.csv")
# 
# 
# ggplot(df_asr, aes(x = year, y = asr, group = index, color = index)) +
#   geom_line(aes(linetype=index, color=index)) +
#   geom_point(aes(shape = index), size = 2) + # Point size
#   xlim(2000,2020)+
#   scale_color_manual(values = c("darkblue", "darkgreen", "darkred", "purple")) + # Replace with desired colors
#   theme_minimal() + # Lance style typically implies a minimalistic theme
#   labs(
#     title = "",
#     x = "Year of diagnosis",
#     y = "Crude rates per 100,000"
#   ) +
#   theme(
#     plot.title = element_text(hjust = 0.5), # Center the plot title
#     text = element_text(size = 12), # Change text size as needed
#     aspect.ratio = 2.5 # Adjust this value to make the figure skinnier or wider
#   )


```

```{r, message=FALSE, warning=FALSE, echo=FALSE}

# Read the dataset from the provided URL
url <- "https://raw.githubusercontent.com/filhoalm/ITEB-breast-cancer/main/survival_article/data/output_er.csv"
df_asr <- read_csv(url)

#write.csv(df_asr, "C:/Users/filhoam/Desktop/Breast/survival_article/data/output_er.csv")

# you can export your result as csv file using write.csv:
# write.csv(result, file="result.csv")


ggplot(df_asr, aes(x = year, y = asr, group = index, color = index)) +
  geom_line(aes(linetype=index, color=index)) +
  geom_point(aes(shape = index), size = 3) + # Point size
  xlim(2000,2020)+
  scale_color_manual(values = c("darkblue", "darkgreen", "darkred", "purple")) + # Replace with desired colors
  theme_minimal() + # Lance style typically implies a minimalistic theme
  labs(
    title = "",
    x = "Year of diagnosis",
    y = "Rates per 100,000"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5), # Center the plot title
    text = element_text(size = 12), # Change text size as needed
    aspect.ratio = 1.5 # Adjust this value to make the figure skinnier or wider
  )

```





# References


